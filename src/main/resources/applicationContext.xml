<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="ru.kazan.kpfu.itis.master.astafyev.app.repositories"/>
    <context:component-scan base-package="ru.kazan.kpfu.itis.master.astafyev.app.services"/>
    <context:component-scan base-package="ru.kazan.kpfu.itis.master.astafyev.app.util"/>

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- Настройки подключения к БД, бин dataSource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"
    />

    <!-- Настройки фабрики сессий Хибернейта -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="ru.kazan.kpfu.itis.master.astafyev.app.entities">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.connection.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.connection.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.connection.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.current_session_context_class>">thread</prop>
            </props>
        </property>
    </bean>


    <!-- Настраивает управление транзакциями с помощью аннотации @Transactional -->
    <tx:annotation-driven transaction-manager="hibernateTransactionManager"/>

    <!-- Менеджер транзакций -->
    <bean id="hibernateTransactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <!-- Настройки бина dataSource -->
    <bean id="placeholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:jdbc.properties"/>


    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!-- это механизм постобработки компонентов, добавляющий объект-советник во все компоненты,
    отмеченные аннотацией @Repository, который будет перехватывать все специфические исключения
    и преобразовывать их в соответствующие неконтролируемые исключения Spring -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- Менеджер транзакций -->
    <bean id="dataSourceTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- Обычный JDBC шаблон -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>

    <!-- JDBC шаблон с возможностью использования именованных параметров -->
    <bean id="namedJdbcTemplate"
          class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </bean>

    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="100000000"/>
    </bean>

</beans>